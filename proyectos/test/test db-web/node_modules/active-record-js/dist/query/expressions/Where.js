"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const mysql = __importStar(require("mysql"));
const constants_1 = require("../constants");
class Where {
    constructor(column, operator, value, condition) {
        if (constants_1.OPERATORS.indexOf(operator) === -1) {
            throw `where operator is not valid: ${operator}`;
        }
        ;
        if (!condition) {
            condition = Where.conditions.AND;
        }
        this.column = column;
        this.condition = condition;
        this.operator = operator;
        this.value = value;
    }
    valueToString() {
        if (Array.isArray(this.value)) {
            return '(' + this.value.map(value => mysql.escape(value)).join(', ') + ')';
        }
        return mysql.escape(this.value);
    }
    toString() {
        return `${mysql.escapeId(this.column)} ${this.operator.toUpperCase()} ${this.valueToString()}`;
    }
}
exports.default = Where;
Where.conditions = {
    AND: 'AND',
    OR: 'OR'
};
